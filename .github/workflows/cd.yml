name: CD

on:
  workflow_run:
    - workflows: ["Dev Environment IaC"]
      types:
        - completed
    - workflows: ["IAC"]
      types:
        - completed
  push:
    branches:
      - main
      - 'dev/**'
    paths:
      - 'src/adf/**'

permissions:
  contents: read
  id-token: write # For OIDC to Azure

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy_adf_dev:
    if: (github.event_name == 'workflow_run' && github.event.workflow.name == 'Dev Environment IaC') || startsWith(github.ref, 'refs/heads/dev/')
    runs-on: ubuntu-latest
    environment:
      name: dev-${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          # This requires OIDC to be configured between GitHub and Azure
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy ADF content
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ vars.RESOURCE_GROUP }}
          template: src/adf/factory/ARMTemplateForFactory.json
          parameters: src/adf/factory/ARMTemplateParametersForFactory.json

  deploy_adf_staging:
    if: (github.event_name == 'workflow_run' && github.event.workflow.name == 'IAC') || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          # This requires OIDC to be configured between GitHub and Azure
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy ADF content
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ vars.RESOURCE_GROUP }}
          template: src/adf/factory/ARMTemplateForFactory.json
          parameters: src/adf/factory/ARMTemplateParametersForFactory.json

  deploy_adf_production:
    if: (github.event_name == 'workflow_run' && github.event.workflow.name == 'IAC') || github.ref == 'refs/heads/main'
    needs: deploy_adf_staging
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          # This requires OIDC to be configured between GitHub and Azure
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy ADF content
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ vars.RESOURCE_GROUP }}
          template: src/adf/factory/ARMTemplateForFactory.json
          parameters: src/adf/factory/ARMTemplateParametersForFactory.json